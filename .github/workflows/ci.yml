on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

name: ci

jobs:
  auto-merge:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: ahmadnassri/action-dependabot-auto-merge@v2.6.6
        with:
          target: minor
          github-token: ${{ secrets.GITHUB_TOKEN }} 
  check:
    runs-on: ubuntu-latest
    name: check
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo check

  todos:
    name: todos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-todos-${{ hashFiles('**/Cargo.lock') }}
      - run: ./scripts/lint_string.sh "TODO "
      - run: ./scripts/lint_string.sh "TODO:"
      - run: ./scripts/lint_string.sh "FIXME "
      - run: ./scripts/lint_string.sh "FIXME:"
      - run: ./scripts/lint_string.sh "todo "
      - run: ./scripts/lint_string.sh "todo:"
      - run: ./scripts/lint_string.sh "fixme "
      - run: ./scripts/lint_string.sh "fixme:"
      - run: ./scripts/lint_string.sh "dbg!"

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-nextest || true
      - run: cargo nextest run --all-features

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-tarpaulin || true
      - run: cargo tarpaulin --all-features --out xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5.4.3

  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-fmt-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy --all-targets --all-features -- -D warnings
