# This workflow is triggered on pushes to the main branch and uses the `googleapis/release-please-action` to manage releases for a Rust project. It creates major and minor tags based on the release version generated by the action. 
# The workflow also ensures that it does not run for Dependabot PRs to avoid unnecessary releases from automated dependency updates.
# The `release-please-action` is used to automate the release process, including version bump
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    # Exclude/skip Dependabot PRs from triggering this workflow
    if: github.actor != 'dependabot[bot]' 
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.TOD_CONTENTS_READ_WRITE }}
          release-type: rust
  
  # Tag the release as the latest major/minor version
  # This job runs after the release-please job and creates tags for the major and minor
  # versions based on the release version generated by the release-please action.
  tag-major-minor:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create/update major and minor tags
        run: |
          git fetch --tags
          git tag -f v${{ needs.release-please.outputs.major }}
          git tag -f v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}
          git push origin -f v${{ needs.release-please.outputs.major }}
          git push origin -f v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}
