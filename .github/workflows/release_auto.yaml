name: Release Automation

on:
  push:
    branches: [main]
  workflow_dispatch: #Allows manual triggering of the workflow

    
permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    name: Run release-please
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.TOD_CONTENTS_READ_WRITE }}
          release-type: rust

  tag-major-minor:
    name: Tag release
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Version Tags
        run: |
          git fetch --tags
          git tag -f v${{ needs.release-please.outputs.major }}
          git tag -f v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}
          git push origin -f v${{ needs.release-please.outputs.major }}
          git push origin -f v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}

  build:
    name: Build Release
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    uses: ./.github/workflows/release_build_test.yml

  upload:
    name: Upload Release
    needs: build
    uses: ./.github/workflows/release_upload.yml
    secrets:
      TOD_CONTENTS_READ_WRITE: ${{ secrets.TOD_CONTENTS_READ_WRITE }}

  publish:
    name: Publish Release
    needs: upload
    uses: ./.github/workflows/release_publish.yml
    secrets:
      TOD_CONTENTS_READ_WRITE: ${{ secrets.TOD_CONTENTS_READ_WRITE }}
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  comment-complete:
    name: Release Complete!
    runs-on: ubuntu-latest
    needs: publish
    steps:
       - run: |
          sudo apt-get install gh -y
          TAG="${{ needs.release-please.outputs.tag_name }}"
          PR_NUMBER=$(gh pr list --search "$TAG" --json number --jq '.[0].number' || echo "")
          if [ -n "$PR_NUMBER" ]; then
            gh pr comment "$PR_NUMBER" --body "âœ… Release \`$TAG\` completed successfully! [View run]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)"
          else
            echo "No associated PR found for tag $TAG"
          fi
         env:
           GH_TOKEN: ${{ secrets.TOD_CONTENTS_READ_WRITE }}
